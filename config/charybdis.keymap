#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <150>;
    quick-tap-ms = <100>;
    require-prior-idle-ms = <75>;
    flavor = "balanced";
    hold-trigger-key-positions = <37 36 39 40>;
    hold-trigger-on-release;
};

/ {
    /* input config for mouse move mode */

    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 4>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <6>;
        bindings = <&ib_toggle_layer 4>;
    };

    /* input config for snipe mode */

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <3>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <8>;
    };

    /* input config for mouse scroll mode */

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <1>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        scale-divisor = <8>;
        bindings = <&ib_wheel_scaler 1 14>;
    };
    
    trackball_arrow_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <2>; // Працює тільки на шарі 2
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_X>;
        scale-multiplier = <1>;
        scale-divisor = <8>;
        bindings = <&ib_x_nav>; // Використовуємо наш новий behavior
    };

    /* define a resolution down scaler only for INPUT_REL_WHEEL */

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    /* adjust cooldown waiting period for mouse key layer after activated */

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <500>;
    };

    ib_x_nav: ib_x_nav {
        compatible = "zmk,input-behavior-move-to-keypress";
        #binding-cells = <0>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_X>;
        threshold = <300>;
        bindings = <&kp RIGHT>, <&kp LEFT>;  // Right for positive, Left for negative
    };

    // ╭──────┬──────┬──────┬──────┬──────┬──────╮  ╭──────┬──────┬──────┬──────┬──────┬──────╮
    //    00     01     02     03    04      05        06     07     08     09     10     11
    // ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
    //    12     13     14     15    16      17        18     19     20     21     22     23
    // ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
    //    24     25     26     27    28      29        30     31     32     33     34     35
    // ╰──────┴──────┴──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┴──────┴──────┴──────╯
    //                         36     37     38        39     40
    //                      ╰──────┴──────┴──────╯  ╰──────┴──────╯

    #define BASE    0
    #define NUM     1
    #define NAV     2
    #define CAD     3
    #define MOU     4
    #define SET     5

    behaviors {
        left_ctrl_shift: left_ctrl_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_CTRL_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <130>;
            quick-tap-ms = <75>;
            flavor = "balanced";
            hold-trigger-key-positions = <16 14>;
            require-prior-idle-ms = <50>;
            hold-trigger-on-release;
        };

        left_win_alt: left_win_alt {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_WIN_ALT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            require-prior-idle-ms = <75>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <15 13>;
        };

        right_ctrl_shift: right_ctrl_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_CTRL_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            require-prior-idle-ms = <75>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <19 21>;
        };

        right_win_alt: right_win_alt {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_WIN_ALT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <225>;
            quick-tap-ms = <125>;
            flavor = "balanced";
            require-prior-idle-ms = <90>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <20 22>;
        };
    };

    combos {
        compatible = "zmk,combos";

        cad_layer_toggle {
            bindings = <&tog 3>;
            key-positions = <12 23>;
            layers = <0 3>;
            require-prior-idle-ms = <25>;
            timeout-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            display-name = "BAS";
            bindings = <
&trans   &kp Q                     &kp W                            &kp E                     &kp R                          &kp T    &kp Y      &kp U                            &kp I                       &kp O                      &kp P                          &trans
&kp TAB  &left_win_alt LEFT_GUI A  &left_ctrl_shift LEFT_CONTROL S  &left_win_alt LEFT_ALT D  &left_ctrl_shift LEFT_SHIFT F  &kp G    &kp H      &right_ctrl_shift RIGHT_SHIFT J  &right_win_alt RIGHT_ALT K  &right_ctrl_shift RCTRL L  &right_win_alt RIGHT_GUI SEMI  &kp SQT
&trans   &kp Z                     &kp X                            &kp C                     &kp V                          &kp B    &kp N      &kp M                            &kp COMMA                   &kp DOT                    &kp FSLH                       &trans
                                                                    &lt 2 ESCAPE              &lt 1 SPACE                    &mo 4    &lt 5 RET  &kp BACKSPACE
            >;
        };

        NUM {
            display-name = "NUM";
            bindings = <
&trans           &kp MINUS     &kp PLUS      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL          &kp EXCLAMATION  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp ASTERISK  &kp AMPERSAND         &trans
&kp PRINTSCREEN  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3          &kp NUMBER_4           &kp N5             &kp NUMBER_6     &kp N7            &kp N8             &kp N9        &kp N0                &kp HASH
&trans           &kp DOLLAR    &kp AT_SIGN   &kp PIPE              &kp KP_NUMLOCK         &kp PRINTSCREEN    &kp UNDERSCORE   &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp PERCENT   &kp NON_US_BACKSLASH  &trans
                                             &trans                &mo 1                  &trans             &kp ENTER        &kp BSPC
            >;
        };

        NAV {
            display-name = "NAV";
            bindings = <
&trans  &kp PAGE_DOWN  &kp HOME  &kp UP    &kp END    &kp PAGE_UP        &trans        &trans           &trans         &trans        &trans        &trans
&trans  &kp C_VOL_DN   &kp LEFT  &kp DOWN  &kp RIGHT  &kp C_VOLUME_UP    &trans        &kp RIGHT_SHIFT  &kp RIGHT_ALT  &kp RCTRL     &kp LEFT_WIN  &trans
&trans  &trans         &trans    &trans    &trans     &trans             &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_CLR    &sys_reset
                                 &mo 2     &trans     &trans             &trans        &trans
            >;
        };

        CAD {
            display-name = "CAD";
            bindings = <
&trans   &kp Q   &kp W                            &kp E      &kp R                                 &kp T        &kp Y      &kp U          &kp I      &kp O    &kp P     &trans
&kp TAB  &kp N1  &left_ctrl_shift LCTRL NUMBER_2  &kp N3     &left_ctrl_shift LEFT_SHIFT NUMBER_4  &kp N5       &kp N6     &kp N7         &kp N8     &kp N9   &kp N0    &kp ESC
&trans   &kp Z   &kp X                            &kp C      &kp V                                 &kp B        &kp N      &kp M          &kp COMMA  &kp DOT  &kp FSLH  &trans
                                                  &mkp MCLK  &mkp RCLK                             &mkp LCLK    &kp ENTER  &kp BACKSPACE
            >;
        };

        MOU {
            display-name = "MOU";
            bindings = <
&trans  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
                        &mkp RCLK  &trans  &mkp LCLK    &trans  &trans
            >;
        };

        SET {
            display-name = "SET";
            bindings = <
&trans      &trans        &trans        &bootloader   &sys_reset    &trans          &trans  &sys_reset      &bootloader  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &studio_unlock  &trans       &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans          &trans       &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans
            >;
        };
    };
};
